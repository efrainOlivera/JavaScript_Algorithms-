{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red63\green63\blue63;\red63\green63\blue63;}
{\*\expandedcolortbl;;\cssrgb\c31373\c31373\c31373;\cssrgb\c31373\c31373\c31373;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl504\partightenfactor0
\ls1\ilvl0
\f0\fs28 \cf2 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Return the given array, after setting any negative values to zero.\'a0 For example resetNegatives( [1,2,-1, -3]) should return [1,2,0,0].\
\pard\tx720\pardeftab720\sl504\partightenfactor0
\cf2 \
	var array = [1,2,-1,-3];\
	for(var i = 0; i <= arr.length; i++)\{\
	 	if(array[I] < 0)\{\
		array[I] = 0;\
	\}\
	\}\
	return arr;\
	\}\
\
    2  .Given an array, move all values forward by one index, dropping the first and leaving a \'910\'92 		value at the end.\'a0 For example moveForward( [1,2,3]) should return [2,3,0].\
	\
	function arrshift(arr)\{\
		for(var i = 1; I < arr.length; i++)\{\
			arr[i-1] = arr[i];\
	\}\
	arr.length - - ;\
	arr.push(0);\
	\}\
	arrshift([1,2,3,4]);\
\
    3. \kerning1\expnd0\expndtw0 \outl0\strokewidth0 	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Given an array, return an array with values in a reversed order.\'a0 For example, 			returnReversed([1,2,3]) should return [3,2,1].\
\
	var temp = arr[0];\
	arr[0] = arr[arr.length - 1];\
	arr[arr.legth-1] = temp;\
	return arr;\
	\}\
	last ([1,2,3]);\
\
\
    4.\kerning1\expnd0\expndtw0 \outl0\strokewidth0 	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a function that changes a given array to list each original element twice, retaining 		original order.  Have the function return the new array.  For example 					repeatTwice(\'a0[4,\'94Ulysses\'94, 42, false] ) should return [4,4, \'93Ulysses\'94, \'93Ulysses\'94, 42, false, 	false].\
\
	var arr = [2,4,6,8];\
	var newArray = [];\
	for(var i = 0; i <= arr.length; i++)\{\
		newArray.pop[I]  =  arr[i];\
\pard\tx720\pardeftab720\sl504\partightenfactor0
\cf3 \outl0\strokewidth0 		newArray.pop[I]  =  arr[i];\
	\}\
	console.log(newArray);\
\pard\tx720\pardeftab720\sl504\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec2 \
	\
\
	\
\
\
\
\
\
\
\
\
}