1) function a(){              // Function not given/undefine, move to next line
2)    console.log('hello');	// Not called, move to next line
3) }
4) console.log('Dojo');         // console.log called "Dojo"

Dojo

—————————————————————————————————————————————————————————————————
1) function a(){		// Function defined line 5, x = a()
2)   console.log('hello');	// call  'hello'
3)   return 15;			// 15 = a()
4) }
5) x = a();
6) console.log('x is', x);	// call ('x is',15);

hello x, is 15

—————————————————————————————————————————————————————————————————
1) function a(n){		//Function defined line 5, a(3)
2)   console.log('n is', n);	//call "n is" 3
3)   return n+15;		// return 18
4) }
5) x = a(3);
6) console.log('x is', x);	// call 'x is',18

n is 3
x is 18

—————————————————————————————————————————————————————————————————
1) function a(n){		//Function defined x = a(3)+a(5)	
2)   console.log('n is', n);	//call 'n is' 3    call 'n is' 5
3)   y = n*2;			//16 = 8*2
3)   return y;			// return 16
4) }
5) x = a(3) + a(5);	
6) console.log('x is', x);	//call 'x is',16

n is 3
n is 5
x is 16

—————————————————————————————————————————————————————————————————
1) function op(a,b){		//Function defined line 6 (2,3) (3,5)
2)   c = a+b;			//5 = 2+3  8 = 3+5
3)   console.log('c is', c);	//call 'c is' 5   call 'c is' 8
4)   return c;			//  5,8
5) }
6) x = op(2,3) + op(3,5);	// 5 + 8
7) console.log('x is', x);	//call 'x is' 13 

c is 5, c is 8, x is 13

—————————————————————————————————————————————————————————————————
1) function op(a,b){		//function defined (2,3)(3,op(2,1)(op(2,1)(2,3)
2)   c = a+b;			// 2 + 3=5 2+1=3 3+3=6  etc
3)   console.="function call from-rainbow">log('c is', c); //   'c is' 11 and 8
4)   return c;
5) }
6) x = op(2,3) + op(3,op(2,1)) + op(op(2,1),op(2,3));
7) console.log('x is', x)

c is 5
C is 3
C is 6
C is 3
C is 5
C is 8   
C is 19  
—————————————————————————————————————————————————————————————————
1) var x = 15;          // variable x has a value of 15 
2) function a(){	//function undefine
3)   var x = 10;	// variable x has a value of 10 not taken out
4) }			
5) console.log(x);	//call x = 15		
6) a();			
7) console.log(x);	//call x = 15

15,15

—————————————————————————————————————————————————————————————————
function multiply(x,y){  //function defined b = multiply(2,3)
    console.log(x);	//log 2
    console.log(y);	//log 3 
}
b = multiply(2,3);	
console.log(b);		// console

2,3

—————————————————————————————————————————————————————————————————
function multiply(x,y){        // function defined (2,3) (5,2)
    return x*y;		       // return 2 * 3 = 6  return 5 * 2 = 10
}			 
b = multiply(2,3);	
console.log(b);			// call 6
console.log(multiply(5,2));	// call 10

6,10
—————————————————————————————————————————————————————————————————
var x = [1,2,3,4,5,10];		// variable x value of an array [1,2,3,4,5,10]
for(var i=0; i<5; i++)		// variable i value of 0  i less 5 i plus 1 
{				   
   i = i + 3; 			// (3 = 0 + 3)  (7 = 4 + 3)   
   console.log(i);		// call 3,7
}

3,7

—————————————————————————————————————————————————————————————————
var x=15;                    // variable x value of 15	
console.log(x);		     // call (15)
function awesome(){	     // func awesome() defined 
    var x=10;		     // variable x value of 10
    console.log(x);	     // call (10)
}
console.log(x);		     // call (15)
awesome();			
console.log(x);		     // call (15)

15,15,10,15

—————————————————————————————————————————————————————————————————
for(var i=0; i<15; i+=2){    // variable i value of 0,  i less 15, i plus 2
     console.log(i);	     // call i run until i is greater than 15
}			     // 0,2,4,,6,8,10,12,14

0,2,4,,6,8,10,12,14

—————————————————————————————————————————————————————————————————
for(var i=0; i<3; i++){      // variable i has a value of 0, i less than 3, i plus 1
   for(var j=0; j<2; j++){   // variable j has a value of 0, j less than 3, j plus 1       				variable i 0->1->2
       console.log(i*j);     	variable j 0->1->2
   }
}			     // 

0,0,0,1,0,2

—————————————————————————————————————————————————————————————————
function looping(x,y){            //func (3,3)
   for(var i=0; i<x; i++){	  // variable i value of 0
      for(var j=0; j<x; j++){	  // variable j value of 0         
          console.log(i*j);	  //  0 * 0 = 0 
      } 			  // 0,1,2,0,2,4
   }
}
z = looping(3,3);`		//  
console.log(z);

0,0,0,0,1,2,0,2,4

—————————————————————————————————————————————————————————————————
function looping(x,y){		//function defined (3,5)
   for(var i=0; i<x; i++){	// variable i value of 0
      for(var j=0; j<y; j++){	// variable j value of 0         			
         console.log(i*j);      //call 3 * 5 = 15
      } 
   }
   return x*y;			//return 3 * 5 
}
z = looping(3,5);		
console.log(z);			//call 15 

0,0,0,0,0,1,2,3,4,0,2,4,6,8,15


—————————————————————————————————————————————————————————————————
Please complete the codes below to have the function print all the integers from 1 to x.  If x is negative, have it print/log "negative number' and have the function return false.

function printUpTo(x){
  var arr = [];
  for(var i = 1; i < 1001; i++){
	arr.push(i);
}
}
printUpTo(1000); // should print all the integers from 1 to 1000copy
y = printUpTo(-10); // should return false
console.log(y); // should print f


—————————————————————————————————————————————————————————————————
Please complete the code below to have the function print integers from 0 to x and with each integer print the sum so far.  Have the function return the final sum

function printSum(x){
  var sum = 0;
	for(var i = o; i <= 255; I++){
	console.log(x);
	(sum += x);
}
Y = printSum(255);
cosole.log(y);


y = printSum(255) // should print all the integers from 0 to 255 and with each integer print the sum so far.
console.log(y) // should print 32640


—————————————————————————————————————————————————————————————————
Please complete the code below to have the function return the sum of all the values in a given array

function printSumArray(x){
  var sum = 0;
  for(var i=0; i<x.length; i++) {
    
	Sum += arr[i];
  }
  return sum;
}
console.log( printSumArray([1,2,3]) ); // should log 6


 


